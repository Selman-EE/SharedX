name: Release NuGet Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:Version=${{ github.event.inputs.version }}
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Pack SharedX.Core
      run: dotnet pack src/SharedX.Core/SharedX.Core.csproj --configuration Release --no-build --output ./artifacts /p:PackageVersion=${{ github.event.inputs.version }}
    
    - name: Pack SharedX.Extensions
      run: dotnet pack src/SharedX.Extensions/SharedX.Extensions.csproj --configuration Release --no-build --output ./artifacts /p:PackageVersion=${{ github.event.inputs.version }}
    
    - name: Pack SharedX.Abstractions
      run: dotnet pack src/SharedX.Abstractions/SharedX.Abstractions.csproj --configuration Release --no-build --output ./artifacts /p:PackageVersion=${{ github.event.inputs.version }}
    
    - name: Push to NuGet.org
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Release v${{ github.event.inputs.version }}
        body: |
          ## NuGet Packages Published
          
          - SharedX.Core v${{ github.event.inputs.version }}
          - SharedX.Extensions v${{ github.event.inputs.version }}
          - SharedX.Abstractions v${{ github.event.inputs.version }}
          
          Install via:
```bash
          dotnet add package SharedX.Core --version ${{ github.event.inputs.version }}
```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

